openapi: 3.0.1
info:
    title: E-commerce REST API
    version: 1.0.0
    description: An API used for an e-commerce store made for Codecademy
paths:
    /users/{userId}:
        summary: Endpoint for everything users
        get:
            summary: Fetch user by ID
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            description: >-
                Returns user data by ID , returns full info if requesting own data,
                basic info if requesting others
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Returning own ID:
                                    value: |-
                                        {
                                            "email": "example@gmail.com",
                                            "username": null,
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "address": null,
                                            "created": "2023-01-16T13:07:46.799Z"
                                        }
                                Requesting others data:
                                    value: |-
                                        {
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "username": null
                                        }
                '404':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Requesting an incorrect userID:
                                    value: |-
                                        {
                                            "message": "User not found"
                                        }
            tags:
                - users
        put:
            summary: Updates user by ID
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            description: Returns full user data with updated information
            operationId: ''
            responses:
                '200':
                    description: Successful Update
                    content:
                        application/json:
                            examples:
                                Updating valid info:
                                    value: |-
                                        {
                                            "email": "example@gmail.com",
                                            "username": null,
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "address": null,
                                            "created": "2023-01-16T13:07:46.799Z"
                                        }
                '400':
                    description: Failed update
                    content:
                        application/json:
                            examples:
                                Updating valid info:
                                    value: |-
                                        {
                                            "message": "User not updated"
                                        }
            tags:
                - users
        delete:
            summary: Deletes user by ID
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            description: Returns deletion message
            operationId: ''
            responses:
                '200':
                    description: Successful deletion
                    content:
                        application/json:
                            examples:
                                Deleting valid user:
                                    value: |-
                                        {
                                            "message": "User deleted"
                                        }
                '400':
                    description: failed deletion
                    content:
                        application/json:
                            examples:
                                Deleting invalid info:
                                    value: |-
                                        {
                                            "message": "User not deleted"
                                        }
            tags:
                - users
    /register:
        summary: Registers new users
        post:
            summary: Register new users
            description: Adds new users to database
            operationId: ''
            responses:
                '200':
                    description: Successful registration
                    content:
                        application/json:
                            examples:
                                Registration of new user:
                                    value: |-
                                        {
                                            "email": "example@gmail.com",
                                            "username": null,
                                            "firstName": "John",
                                            "lastName": "Doe",
                                            "address": null
                                        }
                '400':
                    description: failed registration
                    content:
                        application/json:
                            examples:
                                Failed registration:
                                    value: |-
                                        {
                                            "message": "User not registered"
                                        }
            tags:
                - users
    /login:
        summary: User login
        post:
            summary: Login user
            description: Logs user into account
            operationId: ''
            responses:
                '200':
                    description: Successful login
                    content:
                        application/json:
                            examples:
                                Successful login:
                                    value: |-
                                        <h1>Express e-commerce API - Jon Green.</h1>
                                        <h2>View count: 1</h2>
                                        <h2>User: John Doe</h2>
                '401':
                    description: failed login
                    content:
                        text/plain; charset=utf-8:
                            examples:
                                Failed login:
                                    value: Unauthorized
            tags:
                - users
    /products:
        summary: Endpoint for everything products
        get:
            summary: Fetch all products
            description: Used to pull all products from database
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful request for all products:
                                    value: |-
                                        [
                                            {
                                                "name": "iPhone 14 Pro Max Vector Template",
                                                "price": "5",
                                                "description": "High quality vector template for cutting out vinyl skins for iPhone 14 Pro Max",
                                                "category": "apple",
                                                "type": "digital",
                                                "images": [
                                                    "https://image1.jpg",
                                                    "https://image2.jpg",
                                                    "https://image3.jpg"
                                                ]
                                            },
                                            {
                                                "name": "iPhone 12 Pro Max Vector Template",
                                                "price": "5",
                                                "description": "High quality vector template for cutting out vinyl skins for iPhone 12 Pro Max",
                                                "category": "apple",
                                                "type": "digital",
                                                "images": [
                                                    "https://image1.jpg",
                                                    "https://image2.jpg",
                                                    "https://image3.jpg"
                                                ]
                                            }
                                        ]
                '404':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "No Products found"
                                        }
            tags:
                - products
        post:
            summary: Add new product
            description: Adds new product to database, requires admin privileges
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful request:
                                    value: |-
                                        {
                                            "name": "iPhone 13 Pro Max Vector Template",
                                            "price": "5",
                                            "description": "High quality vector template for cutting out vinyl skins for iPhone 13 Pro Max",
                                            "category": "apple",
                                            "type": "digital",
                                            "images": [
                                                "https://image1.jpg",
                                                "https://image2.jpg",
                                                "https://image3.jpg"
                                            ]
                                        }
                '400':
                    description: Failed request due to missing required information
                    content:
                        application/json:
                            examples:
                                Failed request due to missing required information:
                                    value: |-
                                        {
                                            "message": "Missing input: name"
                                        }
                '500':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "Product not created"
                                        }
            tags:
                - products
    /products/{productId}:
        summary: Specific product request
        parameters:
            - name: productId
              in: path
              description: ID of the product to retrieve
              required: true
              schema:
                  type: integer
        get:
            summary: Fetch product by productId
            description: Request for specific products
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful request:
                                    value: |-
                                        {
                                            "name": "iPhone 14 Pro Max Vector Template",
                                            "price": "5",
                                            "description": "High quality vector template for cutting out vinyl skins for iPhone 14 Pro Max",
                                            "category": "apple",
                                            "type": "digital",
                                            "images": [
                                                "https://image1.jpg",
                                                "https://image2.jpg",
                                                "https://image3.jpg"
                                            ]
                                        }
                '404':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "No product found"
                                        }
            tags:
                - products
        put:
            summary: Update product by productId
            parameters:
                - name: productId
                  in: path
                  description: ID of the product to retrieve
                  required: true
                  schema:
                      type: integer
            description: Update product by productId, requires admin privileges
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful Request:
                                    value: |-
                                        {
                                            "name": "iPhone 13 Pro Max Vector Template",
                                            "price": "5",
                                            "description": "High quality vector template for cutting out vinyl skins for iPhone 13 Pro Max",
                                            "category": "apple",
                                            "type": "digital",
                                            "images": [
                                                "https://image1.jpg",
                                                "https://image2.jpg",
                                                "https://image3.jpg"
                                            ]
                                        }
                '400':
                    description: Failed request from incorrect input
                    content:
                        application/json:
                            examples:
                                Failed request from incorrect input:
                                    value: |-
                                        {
                                            "message": "column \"pricse\" of relation \"products\" does not exist"
                                        }
                '500':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed update:
                                    value: |-
                                        {
                                            "message": "Error updating product"
                                        }
            tags:
                - products
        delete:
            summary: Delete product by productId
            description: >-
                Deletes a product from the database by productId, requires admin
                privileges
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful Request:
                                    value: |-
                                        {
                                            "message": "Product deleted"
                                        }
                '404':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "No product found"
                                        }
            tags:
                - products
    /carts/{userId}:
        summary: Endpoint for everything carts
        get:
            summary: Fetch cart by userId
            description: Fetch cart by userId
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Items in cart:
                                    value: |-
                                        {
                                            "id": 1,
                                            "user_id": 1,
                                            "items": [
                                                {
                                                    "product_id": 1,
                                                    "quantity": 1
                                                },
                                                {
                                                    "product_id": 5,
                                                    "quantity": 2
                                                }
                                            ]
                                        }
                                Empty cart:
                                    value: |-
                                        {
                                            "id": 1,
                                            "user_id": 1,
                                            "items": []
                                        }
                '500':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "*error message*"
                                        }
            tags:
                - carts
        post:
            summary: Add item to cart
            description: Add item to cart or update if already exists
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful request:
                                    value: |-
                                        {
                                            "product_id": 1,
                                            "quantity": 1
                                        }
                '500':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "*Error message*"
                                        }
            tags:
                - carts
        put:
            summary: Add item to cart
            description: Add item to cart or update if already exists
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            operationId: ''
            responses:
                '200':
                    description: Successful request
                    content:
                        application/json:
                            examples:
                                Successful request:
                                    value: |-
                                        {
                                            "product_id": 1,
                                            "quantity": 1
                                        }
                '500':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "*Error message*"
                                        }
            tags:
                - carts
        delete:
            summary: Delete item from cart by userId
            description: Deletes one item from a cart
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            operationId: ''
            responses:
                '200':
                    description: Successful request
                '400':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "Item not removed from cart"
                                        }
            tags:
                - carts
    /carts/{userId}/all:
        summary: Deletes all items from cart
        delete:
            summary: Deletes all items from cart
            description: Resets user cart to empty cart
            parameters:
                - name: userId
                  in: path
                  description: ID of the user to retrieve
                  required: true
                  schema:
                      type: integer
            operationId: ''
            responses:
                '200':
                    description: Successful request
                '400':
                    description: Failed request
                    content:
                        application/json:
                            examples:
                                Failed request:
                                    value: |-
                                        {
                                            "message": "Items not removed from cart"
                                        }
            tags:
                - carts
